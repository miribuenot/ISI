---- MODULE ejercicio_4 ----
EXTENDS Integers

RANGE_TEMPS == (-20..60)
MAX_INCREMENT == 5

(* --algorithm system {

fair process (Thermometer = "Thermometer")
    variables display \in RANGE_TEMPS, 
              sensor  \in RANGE_TEMPS;
{Thermometer:   
    while (TRUE) {
        either {
            when display = sensor;

            ReadSensor:
            with (newTemperature \in RANGE_TEMPS) {
                sensor := newTemperature;
            }
        }    
        or{
            when display /= sensor;

            UpdateDisplay:
            if (display > sensor) {
                if (display - sensor >= MAX_INCREMENT) 
                    display := display - MAX_INCREMENT
                else 
                    display := display - ((display - sensor) % MAX_INCREMENT)
            }    
            else if (display < sensor) {
                if (sensor - display >= MAX_INCREMENT) 
                    display := display + MAX_INCREMENT
                else
                    display := display + ((sensor - display) % MAX_INCREMENT) 
            }                    
        }
    } \* while
}

fair process (Clock = "Clock")
    variables hour \in HOURS;
{Clock:
    while (TRUE) {
        Tick:
        if (hour < 12) {
            hour := hour + 1;
        }
        else {
            hour := 1;
        };
    } \* while
}

}
*)


----
TypeOK == /\ sensor \in RANGE_TEMPS 
          /\ display \in RANGE_TEMPS

AllTemperatures == \A t \in RANGE_TEMPS: <>(sensor = t) 

DisplayAlwaysReachesSensor == display /= sensor => <> (display = sensor)

DisplayIncrementsOK == 
    [][  IF  display' <  display THEN
            /\ display' >= sensor
            /\ ~ \E i \in (1..MAX_INCREMENT): 
                 (i > display  - display' /\ display - i >= sensor)
        ELSE IF display' >  display THEN
            /\ display' <= sensor
            /\ ~ \E i \in 
                 (1..MAX_INCREMENT): (i > display' - display  /\ display + i <= sensor)
        ELSE  display' = display
    ]_display
====

